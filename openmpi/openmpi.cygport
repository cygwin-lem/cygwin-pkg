NAME="openmpi"
VERSION=1.10.7
RELEASE=1

CATEGORY="Libs"
SUMMARY="Open Message Passing Interface API"
DESCRIPTION="MPI stands for the Message Passing Interface, a standardized API
typically used for parallel and/or distributed computing. Open MPI is an open
source, freely available, high performance implementation of the MPI spec."

HOMEPAGE="http://www.open-mpi.org"
SRC_URI="http://www.open-mpi.org/software/ompi/v1.10/downloads/${P}.tar.bz2"

PATCH_URI="pre-install.patch
openmpi-README.patch
"

PKG_NAMES="openmpi libopenmpi12 libopenmpicxx1 libopenmpifh12  
libopenmpiusef08_11 libopenmpiusetkr6 libopenmpi-devel"

openmpi_CONTENTS="usr/bin/cygopen* usr/bin/[smo]* usr/share/doc usr/share/man/man[17]/"

libopenmpi12_SUMMARY="${SUMMARY} (C runtime)"
libopenmpi12_CONTENTS="usr/bin/cygmpi-12.dll  
usr/lib/openmpi/ etc/ usr/share/openmpi/"

libopenmpicxx1_SUMMARY="${SUMMARY} (C++ runtime)"
libopenmpicxx1_CONTENTS="usr/bin/cygmpi_cxx-1.dll"

libopenmpifh12_SUMMARY="${SUMMARY} (Fortran runtime)"
libopenmpifh12_CONTENTS="usr/bin/cygmpi_mpifh-12.dll"

libopenmpiusef08_11_SUMMARY="${SUMMARY} (Fortran use  F2008 runtime)"
libopenmpiusef08_11_CONTENTS="usr/bin/cygmpi_usempif08-11.dll"

libopenmpiusetkr6_SUMMARY="${SUMMARY} (Fortran use  tkr runtime)"
libopenmpiusetkr6_CONTENTS="usr/bin/cygmpi_usempi_ignore_tkr-6.dll"

libopenmpi_devel_SUMMARY="${SUMMARY} (development)"
libopenmpi_devel_CONTENTS="usr/include/ usr/lib/libmpi* usr/lib/*.mod
                           usr/lib/pkgconfig/ompi* usr/share/man/man3/ 
			   usr/lib/libopen* "

# opal, orte libraries for internal use only, headers not installed by default
PKG_IGNORE="usr/lib/pkgconfig/orte.pc"

DIFF_EXCLUDES="configure *.in *.guess *.sub *sh *m4 *libltdl* compile depcomp ylwrap py-compile"
KEEP_LA_FILES="none"

src_compile() {
	if [ $(arch) = "x86_64" ]
	then 
          ATOMICS="--enable-builtin-atomics" 
	else 
          ATOMICS=""  
	fi
        cd ${S}
	./autogen.sh
        cd ${B}
	cygconf \
		${ATOMICS} \
                --disable-mca-dso \
		--disable-sysv-shmem \
		--enable-cxx-exceptions \
                --with-threads=posix \
                --without-cs-fs \
                --with-mpi-param_check=always \
		--enable-contrib-no-build=vt,libompitrace \
		--enable-mca-no-build=paffinity,installdirs-windows,timer-windows,shmem-sysv 

        cygmake 
}

src_test() {
        cd ${B}
        cygmake -i check      
}

src_install() {
	cd ${B}
        cyginstall
}


