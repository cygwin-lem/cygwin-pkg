NAME="openmpi"
VERSION=3.1.2
RELEASE=1

CATEGORY="Libs"
SUMMARY="Open Message Passing Interface API"
DESCRIPTION="MPI stands for the Message Passing Interface, a standardized API
typically used for parallel and/or distributed computing. Open MPI is an open
source, freely available, high performance implementation of the MPI spec."

HOMEPAGE="http://www.open-mpi.org"
SRC_URI="http://www.open-mpi.org/software/ompi/v3.1/downloads/${P}.tar.bz2"

PATCH_URI="pre-install.patch
openmpi-README.patch
"

PKG_NAMES="openmpi libopenmpi40 libopenmpifh40  
libopenmpiusef08_40 libopenmpiusetkr40 libopenmpi-devel"

openmpi_CONTENTS="usr/bin/cygopen* usr/bin/[spmo]* usr/share/doc usr/share/man/man[17]/"

libopenmpi40_SUMMARY="${SUMMARY} (C runtime)"
libopenmpi40_CONTENTS="usr/bin/cygmpi-40.dll  
usr/lib/openmpi/ etc/ usr/share/openmpi/ usr/share/pmix/"


libopenmpifh40_SUMMARY="${SUMMARY} (Fortran runtime)"
libopenmpifh40_CONTENTS="usr/bin/cygmpi_mpifh-40.dll"

libopenmpiusef08_40_SUMMARY="${SUMMARY} (Fortran use F2008 runtime)"
libopenmpiusef08_40_CONTENTS="usr/bin/cygmpi_usempif08-40.dll"

libopenmpiusetkr40_SUMMARY="${SUMMARY} (Fortran use tkr runtime)"
libopenmpiusetkr40_CONTENTS="usr/bin/cygmpi_usempi_ignore_tkr-40.dll"

libopenmpi_devel_SUMMARY="${SUMMARY} (development)"
libopenmpi_devel_CONTENTS="usr/include/ usr/lib/libmpi* usr/lib/*.mod
                           usr/lib/pkgconfig/ompi* usr/share/man/man3/ 
			   usr/lib/libopen* "

# opal, orte libraries for internal use only, headers not installed by default
PKG_IGNORE="usr/lib/pkgconfig/orte.pc"

DIFF_EXCLUDES="configure *.in *.guess *.sub *sh *m4 *libltdl* compile depcomp ylwrap py-compile missing test-driver ar-lib frameworks.h"
KEEP_LA_FILES="none"

src_compile() {
	if [ $(arch) = "x86_64" ]
	then 
          ATOMICS="--enable-builtin-atomics" 
	else 
          ATOMICS=""  
	fi
        cd ${S}
	./autogen.pl --force
        cd ${B}
	cygconf \
		${ATOMICS} \
                --disable-mca-dso \
		--disable-sysv-shmem \
		--enable-cxx-exceptions \
                --with-threads=posix \
                --without-cs-fs \
                --with-mpi-param_check=always \
		--enable-contrib-no-build=vt,libompitrace \
		--enable-mca-no-build=paffinity,installdirs-windows,timer-windows,shmem-sysv,patcher

        cygmake 
}

src_test() {
        cd ${B}
        cygmake -i check      
}

src_install() {
	cd ${B}
        cyginstall
	rm ${D}/usr/bin/mpic++
	rm ${D}/usr/bin/mpicxx

}


