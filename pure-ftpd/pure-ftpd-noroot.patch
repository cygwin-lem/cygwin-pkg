--- origsrc/pure-ftpd-1.0.42/Makefile.am	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/Makefile.am	2015-08-02 18:36:08.171843700 +0200
@@ -1,3 +1,4 @@
+ACLOCAL_AMFLAGS = -I m4
     
 EXTRA_DIST = \
 	THANKS \
--- origsrc/pure-ftpd-1.0.42/src/ftpd.c	2015-07-09 20:05:24.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/ftpd.c	2015-08-02 15:10:59.846107600 +0200
@@ -1283,9 +1283,11 @@ static int doinitsupgroups(const char *u
 {
 #ifndef NON_ROOT_FTP
 # ifdef HAVE_SETGROUPS
+#ifndef __CYGWIN__
     if (setgroups(1U, &gid) != 0) {
         return -1;
     }
+#endif
 # else
     (void) gid;
 # endif
@@ -1385,12 +1387,14 @@ void douser(const char *username)
             pw = &pw_;
         }
 #else
-        if ((pw = getpwnam("ftp")) == NULL ||
-            pw->pw_uid == 0 || pw->pw_gid == 0 ||
-            doinitsupgroups("ftp", (uid_t) -1, pw->pw_gid) != 0 ||
-            setgid(pw->pw_gid) || setegid(pw->pw_gid)) {
+        if ((pw = getpwnam("ftp")) == NULL) {
             cantsec:
             die(421, LOG_ERR, MSG_UNABLE_SECURE_ANON);
+        } else if (pw->pw_uid == 0 || pw->pw_gid == 0 ||
+            doinitsupgroups("ftp", (uid_t) -1, pw->pw_gid) != 0 ||
+            setgid(pw->pw_gid) || setegid(pw->pw_gid)) {
+            syslog(LOG_ERR, "failed to setgid/setegid to %d", (int)pw->pw_gid);
+            goto cantsec;
         }
 #endif
 #ifdef WITH_VIRTUAL_HOSTS
@@ -1427,6 +1431,7 @@ void douser(const char *username)
                 hd = (char *) "/";
             }
             if (chdir(root_directory) || chroot(root_directory) || chdir(hd)) {
+                syslog(LOG_ERR, "failed to chroot to %s", root_directory);
                 die(421, LOG_ERR, MSG_CANT_CHANGE_DIR " [%s]",
                     root_directory, hd);
                 goto cantsec;
@@ -1470,10 +1475,12 @@ void douser(const char *username)
         if (authresult.uid > (uid_t) 0) {
 # ifndef WITHOUT_PRIVSEP
             if (setuid(authresult.uid) != 0 || seteuid(authresult.uid) != 0) {
+                syslog(LOG_ERR, "failed to setuid/seteuid to %d", (int)authresult.uid);
                 goto cantsec;
             }
 # else
             if (seteuid(authresult.uid) != 0) {
+                syslog(LOG_ERR, "failed to seteuid to %d", (int)authresult.uid);
                 goto cantsec;
             }
 #  ifdef USE_CAPABILITIES
@@ -1837,6 +1844,7 @@ void dopass(char *password)
     }
 #ifndef NON_ROOT_FTP
     if (setgid(authresult.gid) || setegid(authresult.gid)) {
+        syslog(LOG_ERR, "Failed to setgid/setegid to %d", (int)authresult.gid);
         _EXIT(EXIT_FAILURE);
     }
 #endif
@@ -1970,10 +1978,12 @@ void dopass(char *password)
     disablesignals();
 # ifndef WITHOUT_PRIVSEP
     if (setuid(authresult.uid) != 0 || seteuid(authresult.uid) != 0) {
+        syslog(LOG_ERR, "Failed to seteuid to %d", (int)authresult.uid);
         _EXIT(EXIT_FAILURE);
     }
 # else
     if (seteuid(authresult.uid) != 0) {
+        syslog(LOG_ERR, "Failed to seteuid to %d", (int)authresult.uid);
         _EXIT(EXIT_FAILURE);
     }
 #  ifdef USE_CAPABILITIES
@@ -5504,7 +5514,7 @@ static void standalone_server(void)
 }
 #endif
 
-#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
+/*#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
 static struct passwd *fakegetpwnam(const char * const name)
 {
     static struct passwd pwd;
@@ -5519,7 +5529,7 @@ static struct passwd *fakegetpwnam(const
     return &pwd;
 }
 #endif
-
+*/
 int pureftpd_start(int argc, char *argv[], const char *home_directory_)
 {
 #ifndef NO_GETOPT_LONG
--- origsrc/pure-ftpd-1.0.42/src/ftpd_p.h	2015-07-09 20:05:24.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/ftpd_p.h	2015-08-02 15:11:00.033307900 +0200
@@ -345,12 +345,14 @@ typedef struct ULHandler_ {
 #define PFD_DATA 0
 #define PFD_COMMANDS 1
 
+/*
 #if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined (__CYGWIN__)
 static struct passwd *fakegetpwnam(const char * const name);
 # define getpwnam(A) fakegetpwnam(A)
 # define getpwuid(A) fakegetpwnam(NULL)
 #endif
 #define NON_ROOT_ANON_DIR "/ftp"
+*/
 
 #ifdef PROBE_RANDOM_AT_RUNTIME
 static const char *random_device;
--- origsrc/pure-ftpd-1.0.42/src/ftpwho-update.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/ftpwho-update.c	2015-08-02 15:22:27.137514800 +0200
@@ -98,6 +98,16 @@ void ftpwho_unlinksbfile(const pid_t pid
 }
 #endif
 
+// making scoreboard accessible only to root is kinda
+// useless on cygwin, since SYSTEM is not a real user
+#ifdef __CYGWIN__
+#define DIRPERM 0750
+#define FILEPERM 0640
+#else
+#define DIRPERM 0700
+#define FILEPERM 0600
+#endif
+
 int ftpwho_initwho(void)
 {
     int fd;
@@ -106,22 +116,24 @@ int ftpwho_initwho(void)
 
     shm_data_cur = NULL;
     if ((fd = open(SCOREBOARD_PATH, O_RDONLY | O_DIRECTORY)) == -1) {
-        if (mkdir(SCOREBOARD_PATH, (mode_t) 0700) != 0) {
+        if (mkdir(SCOREBOARD_PATH, (mode_t) DIRPERM) != 0) {
             return -1;
         }
     } else {
-        if (fstat(fd, &st) != 0 || !S_ISDIR(st.st_mode) ||
+        if (fstat(fd, &st) != 0 || !S_ISDIR(st.st_mode) 
 #ifdef NON_ROOT_FTP
-            st.st_uid != geteuid()
+            || st.st_uid != geteuid()
 #else
-            st.st_uid != (uid_t) 0
+#ifndef __CYGWIN__
+            || st.st_uid != (uid_t) 0
+#endif
 #endif
             ) {
             close(fd);
             return -1;
         }
-        if ((st.st_mode & 0777) != 0700) {
-            if (fchmod(fd, 0700) != 0) {
+        if ((st.st_mode & 0777) != DIRPERM) {
+            if (fchmod(fd, DIRPERM) != 0) {
                 close(fd);
                 return -1;
             }
@@ -148,15 +160,17 @@ int ftpwho_initwho(void)
      * Don't check for any lock: we could get a deadlock.
      */
     if ((mmap_fd = open(scoreboardfile,
-                        O_RDWR | O_CREAT | O_NOFOLLOW, 0600)) == -1) {
+                        O_RDWR | O_CREAT | O_NOFOLLOW, FILEPERM)) == -1) {
         goto err;
     }
     if (fstat(mmap_fd, &st) != 0 || !S_ISREG(st.st_mode) ||
-        (st.st_mode & 0600) != 0600 ||
+        (st.st_mode & FILEPERM) != FILEPERM 
 #ifdef NON_ROOT_FTP
-        st.st_uid != geteuid()
+        || st.st_uid != geteuid()
 #else
-        st.st_uid != (uid_t) 0
+#ifndef __CYGWIN__
+        || st.st_uid != (uid_t) 0
+#endif
 #endif
         ) {
         err2:
--- origsrc/pure-ftpd-1.0.42/src/log_unix.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/log_unix.c	2015-08-02 15:11:00.204908200 +0200
@@ -8,6 +8,12 @@
 # include <dmalloc.h>
 #endif
 
+#ifdef __CYGWIN__
+#include <windows.h>
+#include <sys/cygwin.h>
+#define is_winnt        (GetVersion() < 0x80000000)
+#endif
+
 void pw_unix_check(AuthResult * const result,
                    const char *account, const char *password,
                    const struct sockaddr_storage * const sa,
@@ -40,6 +46,7 @@ void pw_unix_check(AuthResult * const re
                strcmp(pw.pw_shell, shell) != 0);
         endusershell();
         if (shell == NULL) {
+            syslog(LOG_ERR, "Can't set user shell: %s", pw.pw_shell);
             return;
         }
     }
@@ -47,6 +54,23 @@ void pw_unix_check(AuthResult * const re
     if ((dir = strdup(pw.pw_dir)) == NULL) {
         return;
     }
+#ifdef __CYGWIN__
+    /* We have to do special Windows NT voodoo with Cygwin in order to be
+     * able to switch UID/GID. More info at
+     * http://cygwin.com/cygwin-ug-net/ntsec.html#NTSEC-SETUID
+     */
+    if (is_winnt) {
+        HANDLE token;
+        
+        if ((token = cygwin_logon_user(&pw, 
+                password)) == INVALID_HANDLE_VALUE) {
+            return;
+        }
+
+        cygwin_set_impersonation_token(token);
+    } else {
+#endif // __CYGWIN__
+
 #ifdef USE_SHADOW
     if ((((pw.pw_passwd)[0] == 'x' && (pw.pw_passwd)[1] == 0) ||
          ((pw.pw_passwd)[0] == '#' && (pw.pw_passwd)[1] == '#' &&
@@ -78,6 +102,9 @@ void pw_unix_check(AuthResult * const re
             goto bye;
         }
     }
+#ifdef __CYGWIN__
+    }
+#endif // __CYGWIN__
     result->uid = pw.pw_uid;
     result->gid = pw.pw_gid;
     result->dir = dir;
--- origsrc/pure-ftpd-1.0.42/src/ls.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/ls.c	2015-08-02 15:25:21.982621900 +0200
@@ -618,6 +618,11 @@ static PureFileInfo *sreaddir(char **nam
         if (checkprintable(de->d_name) != 0 || lstat(de->d_name, &st) < 0) {
             continue;
         }
+#ifdef __CYGWIN__
+        if(!strcmp(de->d_name, "cygdrive")) {
+            continue;
+        }
+#endif
         name_len = strlen(de->d_name) + (size_t) 1U;
         while (names_counter + name_len >= names_size) {
             char *new_names;
--- origsrc/pure-ftpd-1.0.42/src/pure-ftpwho.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/pure-ftpwho.c	2015-08-02 15:27:38.872862300 +0200
@@ -725,11 +725,13 @@ int main(int argc, char *argv[])
     int fodder;
 
 #ifndef NON_ROOT_FTP
+#ifndef __CYGWIN__
     if (geteuid() != (uid_t) 0) {
         puts("You must be root to run this. Sorry.");
         return 1;
     }
 #endif
+#endif
     if (argc < 0) {
         return -1;
     }
@@ -833,11 +835,13 @@ int main(int argc, char *argv[])
         }
         if (fstat(mmap_fd, &st) != 0 || !S_ISREG(st.st_mode) ||
             (st.st_mode & 0600) != 0600 ||
-            st.st_size != (off_t) sizeof (FTPWhoEntry) ||
+            st.st_size != (off_t) sizeof (FTPWhoEntry) 
 #ifdef NON_ROOT_FTP
-            st.st_uid != geteuid()
+            || st.st_uid != geteuid()
 #else
-            st.st_uid != (uid_t) 0
+#ifndef __CYGWIN__
+            || st.st_uid != (uid_t) 0
+#endif
 #endif
             ) {
             goto nextone;
--- origsrc/pure-ftpd-1.0.42/src/pure-pw.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/pure-pw.c	2015-08-02 15:30:32.174566800 +0200
@@ -1274,13 +1274,13 @@ int main(int argc, char *argv[])
     pwinfo.time_begin = pwinfo.time_end = 0U;
     pwinfo.has_per_user_max = 0;
     pwinfo.per_user_max = 0U;
-#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
-    pwinfo.uid = (uid_t) 42U;
-    pwinfo.gid = (gid_t) 42U;
-#else
+//#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
+//    pwinfo.uid = (uid_t) 42U;
+//    pwinfo.gid = (gid_t) 42U;
+//#else
     pwinfo.uid = (uid_t) 0U;
     pwinfo.gid = (gid_t) 0U;
-#endif
+//#endif
 
     argv++;
     argc--;
--- origsrc/pure-ftpd-1.0.42/src/pure-quotacheck.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/pure-quotacheck.c	2015-08-02 15:11:40.031778100 +0200
@@ -182,9 +182,11 @@ static int doinitsupgroups(const char *u
 {
 #ifndef NON_ROOT_FTP
 # ifdef HAVE_SETGROUPS
+#ifndef __CYGWIN__
     if (setgroups(1U, &gid) != 0) {
         return -1;
     }
+#endif
 # else
     (void) gid;
 # endif
--- origsrc/pure-ftpd-1.0.42/src/pure-uploadscript.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/pure-uploadscript.c	2015-08-02 15:41:10.668088200 +0200
@@ -45,11 +45,13 @@ static int upload_pipe_ropen(void)
     }
     setcloexec(upload_pipe_fd);
     if (fstat(upload_pipe_fd, &st) < 0 ||
-        (st.st_mode & 0777) != 0600 || !S_ISFIFO(st.st_mode) ||
+        (st.st_mode & 0777) != 0600 || !S_ISFIFO(st.st_mode)
+#ifndef __CYGWIN__
 #ifdef NON_ROOT_FTP
-        st.st_uid != geteuid()
+        || st.st_uid != geteuid()
 #else
-        st.st_uid != (uid_t) 0
+        || st.st_uid != (uid_t) 0
+#endif
 #endif
         ) {
         fprintf(stderr, "Insecure permissions on " UPLOAD_PIPE_FILE "\n");
@@ -193,12 +195,14 @@ static void dodaemonize(void)
 static int init(void)
 {
     (void) close(0);
+#ifndef __CYGWIN__
 #ifndef NON_ROOT_FTP
     if (geteuid() != (uid_t) 0) {
         fprintf(stderr, "Sorry, but you have to be r00t to run this program\n");
         return -1;
     }
 #endif
+#endif
 
     return 0;
 }
@@ -287,15 +291,20 @@ static int parseoptions(int argc, char *
 static int changeuidgid(void)
 {
 #ifndef NON_ROOT_FTP
-    if (
+    if (gid && (
 #ifdef HAVE_SETGROUPS
+#ifndef __CYGWIN__
         setgroups(1U, &gid) ||
 #endif
-        setgid(gid) || setegid(gid) ||
-        setuid(uid) || seteuid(uid) || chdir("/")) {
+#endif
+        setgid(gid) || setegid(gid))) { 
         return -1;
     }
 #endif
+
+    if(uid && (setuid(uid) || seteuid(uid) || chdir("/"))) {
+         return -1;
+    }
     return 0;
 }
 
--- origsrc/pure-ftpd-1.0.42/src/upload-pipe.c	2015-06-14 00:11:14.000000000 +0200
+++ src/pure-ftpd-1.0.42/src/upload-pipe.c	2015-08-02 15:46:41.368134500 +0200
@@ -25,21 +25,25 @@ int upload_pipe_open(void)
         return -1;
     }
     if (fstat(upload_pipe_lock, &st) < 0 ||
-        (st.st_mode & 0777) != 0600 || !S_ISREG(st.st_mode) ||
+        (st.st_mode & 0777) != 0600 || !S_ISREG(st.st_mode) 
+# ifndef __CYGWIN__
 # ifdef NON_ROOT_FTP
-        st.st_uid != geteuid()
+        || st.st_uid != geteuid()
 # else
-        st.st_uid != (uid_t) 0
+        || st.st_uid != (uid_t) 0
+# endif
 # endif
         ) {
         return -1;
     }
     if (lstat(UPLOAD_PIPE_LOCK, &st) < 0 ||
-        (st.st_mode & 0777) != 0600 || !S_ISREG(st.st_mode) ||
+        (st.st_mode & 0777) != 0600 || !S_ISREG(st.st_mode) 
+# ifndef __CYGWIN__
 # ifdef NON_ROOT_FTP
-        st.st_uid != geteuid()
+        || st.st_uid != geteuid()
 # else
-        st.st_uid != (uid_t) 0
+        || st.st_uid != (uid_t) 0
+# endif
 # endif
         ) {
         unlink(UPLOAD_PIPE_LOCK);
@@ -61,22 +65,26 @@ int upload_pipe_open(void)
         goto anew2;
     }
     if (fstat(upload_pipe_fd, &st) < 0 ||
-        (st.st_mode & 0777) != 0600 || !S_ISFIFO(st.st_mode) ||
+        (st.st_mode & 0777) != 0600 || !S_ISFIFO(st.st_mode) 
+# ifndef __CYGWIN__
 # ifdef NON_ROOT_FTP
-        st.st_uid != geteuid()
+        || st.st_uid != geteuid()
 # else
-        st.st_uid != (uid_t) 0
+        || st.st_uid != (uid_t) 0
+# endif
 # endif
         ) {
         upload_pipe_close();
         return -1;                       /* Don't fight, I'm too old for that */
     }
     if (lstat(UPLOAD_PIPE_FILE, &st) < 0 ||
-        (st.st_mode & 0777) != 0600 || !S_ISFIFO(st.st_mode) ||
+        (st.st_mode & 0777) != 0600 || !S_ISFIFO(st.st_mode) 
+# ifndef __CYGWIN__
 # ifdef NON_ROOT_FTP
-        st.st_uid != geteuid()
+        || st.st_uid != geteuid()
 # else
-        st.st_uid != (uid_t) 0
+        || st.st_uid != (uid_t) 0
+# endif
 # endif
         ) {
         unlink(UPLOAD_PIPE_FILE);       /* Okay, fight a bit :) */
