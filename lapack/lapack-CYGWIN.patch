--- /dev/null	2020-02-12 19:09:47.000000000 +0100
+++ CYGWIN-PATCHES/lapack0.csh	2020-02-12 19:09:42.253980000 +0100
@@ -0,0 +1,12 @@
+set __LA_BINDIR=/usr/lib/lapack
+
+set __LA_PATH=($path:q $__LA_BINDIR:q)
+foreach __LA_F ($path:q)
+    if ( "$__LA_F" == "$__LA_BINDIR" ) then
+        set __LA_PATH=($path:q)
+        break
+    endif
+end
+set path=($__LA_PATH:q)
+unset __LA_BINDIR
+unset __LA_PATH
--- /dev/null	2020-02-12 19:09:47.000000000 +0100
+++ CYGWIN-PATCHES/lapack0.sh	2020-02-12 19:09:22.954983100 +0100
@@ -0,0 +1,19 @@
+__LA_BINDIR=/usr/lib/lapack
+
+# Check if the PATH variable is empty or not
+
+
+if test -n "${PATH}"; then
+  # PATH is not empty
+
+  # Check if path is already in PATH
+  if ! /bin/echo ${PATH} | /bin/grep -q "${__LA_BINDIR}" ; then
+    # Path is not already in PATH, append it to PATH
+    export PATH="${PATH}:${__LA_BINDIR}"
+  fi
+else
+  # PATH is empty
+  export PATH="${__LA_BINDIR}"
+fi
+
+unset __LA_BINDIR
--- /dev/null	2020-02-12 19:09:47.000000000 +0100
+++ CYGWIN-PATCHES/README	2020-02-11 21:01:16.462471700 +0100
@@ -0,0 +1,14 @@
+
+Binary archive includes a reference implementation blas library.
+
+The unusual ddl directory 
+  /usr/lib/lapack/cygblas-0.dll
+  /usr/lib/lapack/cyglapack-0.dll
+
+is to allow to create locally optimized lapack and blas libraries,
+ATLAS (http://math-atlas.sourceforge.net/).
+
+  /usr/bin/cygblas-0.dll
+  /usr/bin/cyglapack-0.dll
+and to have them in precedence on the PATH
+
--- /dev/null	2020-02-12 19:09:47.000000000 +0100
+++ CYGWIN-PATCHES/repack_lapack.sh	2020-02-11 21:01:16.543648200 +0100
@@ -0,0 +1,39 @@
+#!/bin/bash
+
+# before cygport 0.9.85 this was possible
+# now we need to make manually after packaging
+# -----------------------------------------------
+#        dodir /usr/lib/lapack/
+#        mv ${D}/usr/bin/cygblas-0.dll ${D}/usr/lib/lapack/cygblas-0.dll
+#        mv ${D}/usr/bin/cyglapack-0.dll ${D}/usr/lib/lapack/cyglapack-0.dll
+
+
+if [ $(basename $(pwd)) != "CYGWIN-PATCHES" ]
+  then 
+    echo "runme inside CYGWIN-PATCHES" 
+    echo "to repack lapack"
+  exit 1
+fi
+
+cd ..
+
+if [ -d dist_new ]; then rm -r dist_new; fi
+
+mkdir dist_new
+cp -a dist/lapack dist_new
+cd dist_new/lapack
+
+echo "repacking liblapack0"
+cd liblapack0
+PKG=$(find $(PWD) -name "*tar.xz" | xargs basename)
+tar -xf ${PKG}
+mkdir -p usr/lib/lapack
+mv usr/bin/cygblas-0.dll usr/lib/lapack/cygblas-0.dll
+mv usr/bin/cyglapack-0.dll usr/lib/lapack/cyglapack-0.dll
+rmdir usr/bin
+tar -cJf ${PKG} etc usr
+rm -r etc usr
+
+echo "old version in ../dist"
+echo "new version in ../dist_new"
+
