--- origsrc/qrupdate-1.1.2/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ src/qrupdate-1.1.2/Makefile.am	2012-02-07 22:23:15.599908200 +0100
@@ -0,0 +1,2 @@
+SUBDIRS = src test 
+EXTRA_DIST = README
--- origsrc/qrupdate-1.1.2/README	2010-01-11 09:26:02.000000000 +0100
+++ src/qrupdate-1.1.2/README	2012-02-07 22:23:23.127338700 +0100
@@ -49,3 +49,5 @@ LU pivoted rank-1 update (lup1up)
 
 See the INSTALL file for installation details. Consult individual routines
 for documentation.
+
+
--- origsrc/qrupdate-1.1.2/acx_blas.m4	1970-01-01 01:00:00.000000000 +0100
+++ src/qrupdate-1.1.2/acx_blas.m4	2012-02-07 22:23:15.636910300 +0100
@@ -0,0 +1,191 @@
+##### http://autoconf-archive.cryp.to/acx_blas.html
+#
+# SYNOPSIS
+#
+#   ACX_BLAS([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro looks for a library that implements the BLAS
+#   linear-algebra interface (see http://www.netlib.org/blas/). On
+#   success, it sets the BLAS_LIBS output variable to hold the
+#   requisite library linkages.
+#
+#   To link with BLAS, you should link with:
+#
+#   	$BLAS_LIBS $LIBS $FLIBS
+#
+#   in that order. FLIBS is the output variable of the
+#   AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and
+#   is sometimes necessary in order to link with F77 libraries. Users
+#   will also need to use AC_F77_DUMMY_MAIN (see the autoconf manual),
+#   for the same reason.
+#
+#   Many libraries are searched for, from ATLAS to CXML to ESSL. The
+#   user may also use --with-blas=<lib> in order to use some specific
+#   BLAS library <lib>. In order to link successfully, however, be
+#   aware that you will probably need to use the same Fortran compiler
+#   (which can be set via the F77 env. var.) as was used to compile the
+#   BLAS library.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if a BLAS
+#   library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+#   run it if it is not found. If ACTION-IF-FOUND is not specified, the
+#   default action will define HAVE_BLAS.
+#
+#   This macro requires autoconf 2.50 or later.
+#
+# LAST MODIFICATION
+#
+#   2007-07-29
+#
+# COPYLEFT
+#
+#   Copyright (c) 2007 Steven G. Johnson <stevenj@alum.mit.edu>
+#
+#   This program is free software: you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License as
+#   published by the Free Software Foundation, either version 3 of the
+#   License, or (at your option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this program. If not, see
+#   <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright
+#   owner gives unlimited permission to copy, distribute and modify the
+#   configure scripts that are the output of Autoconf when processing
+#   the Macro. You need not follow the terms of the GNU General Public
+#   License when using or distributing such scripts, even though
+#   portions of the text of the Macro appear in them. The GNU General
+#   Public License (GPL) does govern all other use of the material that
+#   constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the
+#   Autoconf Macro released by the Autoconf Macro Archive. When you
+#   make and distribute a modified version of the Autoconf Macro, you
+#   may extend this special exception to the GPL to apply to your
+#   modified version as well.
+
+AC_DEFUN([ACX_BLAS], [
+AC_PREREQ(2.50)
+AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
+acx_blas_ok=no
+
+AC_ARG_WITH(blas,
+	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
+case $with_blas in
+	yes | "") ;;
+	no) acx_blas_ok=disable ;;
+	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
+	*) BLAS_LIBS="-l$with_blas" ;;
+esac
+
+# Get fortran linker names of BLAS functions to check for.
+AC_F77_FUNC(sgemm)
+AC_F77_FUNC(dgemm)
+
+acx_blas_save_LIBS="$LIBS"
+LIBS="$LIBS $FLIBS"
+
+# First, check BLAS_LIBS environment variable
+if test $acx_blas_ok = no; then
+if test "x$BLAS_LIBS" != x; then
+	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
+	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
+	AC_MSG_RESULT($acx_blas_ok)
+	LIBS="$save_LIBS"
+fi
+fi
+
+# BLAS linked to by default?  (happens on some supercomputers)
+if test $acx_blas_ok = no; then
+	save_LIBS="$LIBS"; LIBS="$LIBS"
+	AC_CHECK_FUNC($sgemm, [acx_blas_ok=yes])
+	LIBS="$save_LIBS"
+fi
+
+# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(atlas, ATL_xerbla,
+		[AC_CHECK_LIB(f77blas, $sgemm,
+		[AC_CHECK_LIB(cblas, cblas_dgemm,
+			[acx_blas_ok=yes
+			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
+			[], [-lf77blas -latlas])],
+			[], [-latlas])])
+fi
+
+# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(dgemm, $dgemm,
+		[AC_CHECK_LIB(sgemm, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
+			[], [-lblas])],
+			[], [-lblas])])
+fi
+
+# BLAS in Alpha CXML library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(cxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
+fi
+
+# BLAS in Alpha DXML library? (now called CXML, see above)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(dxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
+fi
+
+# BLAS in Sun Performance library?
+if test $acx_blas_ok = no; then
+	if test "x$GCC" != xyes; then # only works with Sun CC
+		AC_CHECK_LIB(sunmath, acosp,
+			[AC_CHECK_LIB(sunperf, $sgemm,
+        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
+                                 acx_blas_ok=yes],[],[-lsunmath])])
+	fi
+fi
+
+# BLAS in SCSL library?  (SGI/Cray Scientific Library)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(scs, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
+fi
+
+# BLAS in SGIMATH library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(complib.sgimath, $sgemm,
+		     [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
+fi
+
+# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(essl, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
+			[], [-lblas $FLIBS])])
+fi
+
+# Generic BLAS library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
+fi
+
+AC_SUBST(BLAS_LIBS)
+
+LIBS="$acx_blas_save_LIBS"
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_blas_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
+        :
+else
+        acx_blas_ok=no
+        $2
+fi
+])dnl ACX_BLAS
--- origsrc/qrupdate-1.1.2/acx_lapack.m4	1970-01-01 01:00:00.000000000 +0100
+++ src/qrupdate-1.1.2/acx_lapack.m4	2012-02-07 22:23:15.651911100 +0100
@@ -0,0 +1,132 @@
+# ===========================================================================
+#               http://autoconf-archive.cryp.to/acx_lapack.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   ACX_LAPACK([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+#
+# DESCRIPTION
+#
+#   This macro looks for a library that implements the LAPACK linear-algebra
+#   interface (see http://www.netlib.org/lapack/). On success, it sets the
+#   LAPACK_LIBS output variable to hold the requisite library linkages.
+#
+#   To link with LAPACK, you should link with:
+#
+#       $LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS
+#
+#   in that order. BLAS_LIBS is the output variable of the ACX_BLAS macro,
+#   called automatically. FLIBS is the output variable of the
+#   AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and is
+#   sometimes necessary in order to link with F77 libraries. Users will also
+#   need to use AC_F77_DUMMY_MAIN (see the autoconf manual), for the same
+#   reason.
+#
+#   The user may also use --with-lapack=<lib> in order to use some specific
+#   LAPACK library <lib>. In order to link successfully, however, be aware
+#   that you will probably need to use the same Fortran compiler (which can
+#   be set via the F77 env. var.) as was used to compile the LAPACK and BLAS
+#   libraries.
+#
+#   ACTION-IF-FOUND is a list of shell commands to run if a LAPACK library
+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it
+#   is not found. If ACTION-IF-FOUND is not specified, the default action
+#   will define HAVE_LAPACK.
+#
+# LAST MODIFICATION
+#
+#   2008-06-29
+#
+# COPYLEFT
+#
+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>
+#
+#   This program is free software: you can redistribute it and/or modify it
+#   under the terms of the GNU General Public License as published by the
+#   Free Software Foundation, either version 3 of the License, or (at your
+#   option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#   Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License along
+#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright owner
+#   gives unlimited permission to copy, distribute and modify the configure
+#   scripts that are the output of Autoconf when processing the Macro. You
+#   need not follow the terms of the GNU General Public License when using
+#   or distributing such scripts, even though portions of the text of the
+#   Macro appear in them. The GNU General Public License (GPL) does govern
+#   all other use of the material that constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the Autoconf
+#   Macro released by the Autoconf Macro Archive. When you make and
+#   distribute a modified version of the Autoconf Macro, you may extend this
+#   special exception to the GPL to apply to your modified version as well.
+
+AC_DEFUN([ACX_LAPACK], [
+AC_REQUIRE([ACX_BLAS])
+acx_lapack_ok=no
+
+AC_ARG_WITH(lapack,
+        [AC_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
+case $with_lapack in
+        yes | "") ;;
+        no) acx_lapack_ok=disable ;;
+        -* | */* | *.a | *.so | *.so.* | *.o) LAPACK_LIBS="$with_lapack" ;;
+        *) LAPACK_LIBS="-l$with_lapack" ;;
+esac
+
+# Get fortran linker name of LAPACK function to check for.
+AC_F77_FUNC(cheev)
+
+# We cannot use LAPACK if BLAS is not found
+if test "x$acx_blas_ok" != xyes; then
+        acx_lapack_ok=noblas
+        LAPACK_LIBS=""
+fi
+
+# First, check LAPACK_LIBS environment variable
+if test "x$LAPACK_LIBS" != x; then
+        save_LIBS="$LIBS"; LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
+        AC_MSG_CHECKING([for $cheev in $LAPACK_LIBS])
+        AC_TRY_LINK_FUNC($cheev, [acx_lapack_ok=yes], [LAPACK_LIBS=""])
+        AC_MSG_RESULT($acx_lapack_ok)
+        LIBS="$save_LIBS"
+        if test $acx_lapack_ok = no; then
+                LAPACK_LIBS=""
+        fi
+fi
+
+# LAPACK linked to by default?  (is sometimes included in BLAS lib)
+if test $acx_lapack_ok = no; then
+        save_LIBS="$LIBS"; LIBS="$LIBS $BLAS_LIBS $FLIBS"
+        AC_CHECK_FUNC($cheev, [acx_lapack_ok=yes])
+        LIBS="$save_LIBS"
+fi
+
+# Generic LAPACK library?
+for lapack in lapack lapack_rs6k; do
+        if test $acx_lapack_ok = no; then
+                save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+                AC_CHECK_LIB($lapack, $cheev,
+                    [acx_lapack_ok=yes; LAPACK_LIBS="-l$lapack"], [], [$FLIBS])
+                LIBS="$save_LIBS"
+        fi
+done
+
+AC_SUBST(LAPACK_LIBS)
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_lapack_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_LAPACK,1,[Define if you have LAPACK library.]),[$1])
+        :
+else
+        acx_lapack_ok=no
+        $2
+fi
+])dnl ACX_LAPACK
--- origsrc/qrupdate-1.1.2/configure.ac	1970-01-01 01:00:00.000000000 +0100
+++ src/qrupdate-1.1.2/configure.ac	2012-02-07 22:23:15.669912200 +0100
@@ -0,0 +1,35 @@
+AC_PREREQ(2.59)
+AC_INIT([qrupdate], [1.0])
+AM_INIT_AUTOMAKE([foreign])
+
+dnl Checks for standard programs.
+AC_PROG_F77
+AC_F77_LIBRARY_LDFLAGS
+LT_INIT
+AC_PROG_LIBTOOL
+AM_PROG_LIBTOOL
+AC_ARG_VAR(NOOPT_FFLAGS, Fortran 9x compiler flags to use for unoptimized files)
+
+dnl Check for BLAS libraries
+sinclude(acx_blas.m4)
+ACX_BLAS
+if test x"$BLAS_LIBS" = x; then
+   AC_MSG_ERROR([Cannot find blas libraries])
+else
+   LIBS="-lblas $LIBS"
+fi
+
+dnl Check for LAPACK libraries
+sinclude(acx_lapack.m4)
+ACX_LAPACK
+if test x"$LAPACK_LIBS" = x; then
+   AC_MSG_ERROR([Cannot find LAPACK libraries])
+else
+   LIBS="-llapack $LIBS"
+fi
+
+AC_CONFIG_FILES([
+	Makefile
+	src/Makefile
+	test/Makefile ])
+AC_OUTPUT
--- origsrc/qrupdate-1.1.2/src/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ src/qrupdate-1.1.2/src/Makefile.am	2012-02-07 22:23:15.677912600 +0100
@@ -0,0 +1,17 @@
+lib_LTLIBRARIES = libqrupdate.la
+libqrupdate_la_LDFLAGS =  -no-undefined
+
+libqrupdate_la_SOURCES = \
+caxcpy.f   cqrinc.f  dlup1up.f  schdex.f   sqrqh.f    zqr1up.f \
+cch1dn.f   cqrinr.f  dqhqr.f    schinx.f   sqrshc.f   zqrdec.f \
+cch1up.f   cqrot.f   dqr1up.f   schshx.f   sqrtv1.f   zqrder.f \
+cchdex.f   cqrqh.f   dqrdec.f   sgqvec.f   zaxcpy.f   zqrinc.f \
+cchinx.f   cqrshc.f  dqrder.f   slu1up.f   zch1dn.f   zqrinr.f \
+cchshx.f   cqrtv1.f  dqrinc.f   slup1up.f  zch1up.f   zqrot.f  \
+cgqvec.f   dch1dn.f  dqrinr.f   sqhqr.f    zchdex.f   zqrqh.f  \
+clu1up.f   dch1up.f  dqrot.f    sqr1up.f   zchinx.f   zqrshc.f \
+clup1up.f  dchdex.f  dqrqh.f    sqrdec.f   zchshx.f   zqrtv1.f \
+cqhqr.f    dchinx.f  dqrshc.f   sqrder.f   zgqvec.f \
+cqr1up.f   dchshx.f  dqrtv1.f   sqrinc.f   zlu1up.f \
+cqrdec.f   dgqvec.f  sch1dn.f   sqrinr.f   zlup1up.f \
+cqrder.f   dlu1up.f  sch1up.f   sqrot.f    zqhqr.f 
--- origsrc/qrupdate-1.1.2/test/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ src/qrupdate-1.1.2/test/Makefile.am	2012-02-07 22:23:15.700914000 +0100
@@ -0,0 +1,34 @@
+
+LDADD = ../src/libqrupdate.la
+LDFLAGS =  -no-undefined
+
+PROGS=tqr1up tqrinc tqrdec tqrshc tqrinr tqrder \
+      tch1up tch1dn tchinx tchdex tchshx tlup1up \
+      tlu1up 
+
+
+noinst_PROGRAMS = $(PROGS)
+
+tqr1up_SOURCES = tqr1up.f utils.f 
+tqrinc_SOURCES = tqrinc.f utils.f
+tqrdec_SOURCES = tqrdec.f utils.f
+tqrshc_SOURCES = tqrshc.f utils.f
+tqrinr_SOURCES = tqrinr.f utils.f
+tqrder_SOURCES = tqrder.f utils.f
+tch1up_SOURCES = tch1up.f utils.f
+tch1dn_SOURCES = tch1dn.f utils.f
+tchinx_SOURCES = tchinx.f utils.f
+tchdex_SOURCES = tchdex.f utils.f
+tchshx_SOURCES = tchshx.f utils.f
+tlup1up_SOURCES = tlup1up.f utils.f 
+tlu1up_SOURCES = tlu1up.f utils.f 
+
+OUTS=$(PROGS:%=%.out)
+
+
+check: $(OUTS)
+	$(srcdir)/report_results $(OUTS)
+
+$(OUTS): %.out: %
+	./$< | tee $@
+
